<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AggregateExceptionDeserializationFailure" xml:space="preserve">
    <value>序列化流不包含内部异常。</value>
    <comment>异常集合反序列化异常。</comment>
  </data>
  <data name="AmbiguousMatchField" xml:space="preserve">
    <value>找到多个有指定名称且与指定绑定约束匹配的字段。</value>
    <comment>找到多个有指定名称且与指定绑定约束匹配的字段。</comment>
  </data>
  <data name="AmbiguousMatchMethod" xml:space="preserve">
    <value>找到多个有指定名称且与指定绑定约束匹配的方法。</value>
    <comment>找到多个有指定名称且与指定绑定约束匹配的方法。</comment>
  </data>
  <data name="AmbiguousMatchProperty" xml:space="preserve">
    <value>找到多个有指定名称且与指定绑定约束匹配的属性。</value>
    <comment>找到多个有指定名称且与指定绑定约束匹配的属性。</comment>
  </data>
  <data name="ArgumentImplementIComparable" xml:space="preserve">
    <value>必须至少有一个对象实现 IComparable。</value>
    <comment>必须至少有一个对象实现 IComparable。</comment>
  </data>
  <data name="ArgumentMinMaxValue" xml:space="preserve">
    <value>参数 '{0}' 不能大于 '{1}'。</value>
    <comment>最小值大于最大值。</comment>
  </data>
  <data name="ConflictingAcceptAction" xml:space="preserve">
    <value>接受动作与拒绝动作冲突。</value>
    <comment>冲突的接受动作。</comment>
  </data>
  <data name="ConflictingRejectAction" xml:space="preserve">
    <value>拒绝动作与接受动作冲突。</value>
    <comment>冲突的拒绝动作。</comment>
  </data>
  <data name="ConvertInvalidValue" xml:space="preserve">
    <value>'{0}' 不是 '{1}' 的有效值。</value>
    <comment>转换无效。</comment>
  </data>
  <data name="InvalidCacheOptions" xml:space="preserve">
    <value>在缓冲池类型 '{0}' 中找不到与选项匹配的构造函数。</value>
    <comment>缓冲池选项无效。</comment>
  </data>
  <data name="InvalidCacheType" xml:space="preserve">
    <value>无效的缓冲池类型 '{0}'。</value>
    <comment>缓冲池类型无效。</comment>
  </data>
  <data name="InvalidCacheType_ICache" xml:space="preserve">
    <value>无效的缓冲池类型 '{0}'，没有实现 ICache{TKey, TValue} 接口。</value>
    <comment>缓冲池类型无效-未实现 ICache 接口。</comment>
  </data>
  <data name="InvalidLexerContext" xml:space="preserve">
    <value>无效的词法分析上下文 '{0}'。</value>
    <comment>无效的词法分析上下文。</comment>
  </data>
  <data name="InvalidSourceRange" xml:space="preserve">
    <value>从 {0} 到 {1} 不是有效的源文件范围。</value>
    <comment>不是有效的源文件范围。</comment>
  </data>
  <data name="SameParameterName" xml:space="preserve">
    <value>两个参数的名称不能是相同的。</value>
    <comment>参数名相同。</comment>
  </data>
  <data name="SourceReaderClosed" xml:space="preserve">
    <value>无法从已关闭的 SourceReader 中读取。</value>
    <comment>不能从关闭的 SourceReader 中读取。</comment>
  </data>
  <data name="UnboundGenParam" xml:space="preserve">
    <value>不能对 ContainssGenericParameters 为 True 的类型或方法执行后期绑定操作。</value>
    <comment>不能是开放式泛型类型。</comment>
  </data>
  <data name="UnrecognizedToken" xml:space="preserve">
    <value>未识别的词法单元 '{0}'。</value>
    <comment>未识别的词法单元异常。</comment>
  </data>
</root>